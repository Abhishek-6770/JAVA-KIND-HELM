name: Java CI/CD with KIND and Helm

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # - name: Build with Maven
    #   run: mvn clean package

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v3

    # - name: Build Docker Image
    #   run: docker build -t java-hello-app:latest .
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
          

    # - name: Build and push Docker image
    #   run: |
    #     docker build -t ${{ secrets.DOCKER_USERNAME }}/hello-kind-app:latest .
    #     docker push ${{ secrets.DOCKER_USERNAME }}/hello-kind-app:latest
    #     # docker run -p 8080:80 ${{ secrets.DOCKER_USERNAME }}/hello-kind-app:latest


    - name: Install KIND
      uses: helm/kind-action@v1.6.0
      with:
        cluster_name: demo-cluster

    # - name: Load image into KIND
    #   run: kind load docker-image java-hello-app:latest --name demo-cluster

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Set up Helm
      uses: azure/setup-helm@v3

    - name: Deploy using Helm
      run: |
        helm upgrade --install hello-release ./hello-chart
        # helm upgrade --install hello-release ./hello-chart \
        #   --set image.repository=java-hello-app \
        #   --set image.tag=latest \
        #   --set image.pullPolicy=IfNotPresent

    - name: Verify Kubernetes deployment
      run: |
        sleep 50
        kubectl get all
        kubectl get svc hello-app
        kubectl get events
        

    - name: Port forward and test app
      run: |
        kubectl port-forward service/hello-app 8080:80 &
        
        curl http://localhost:8080
